多线程


进程：
1、可以简单认为，一个程序为一个进程
2、而一个进程执行任务，就必须在进程中启动线程，由进程的线程来执行

线程：
1、一个线程，指程序运行和执行的一个任务流程
2、普通Java应用程序一运行，就会执行main方法里面的代码，一行一行执行下去，这个一行一行执行的流程成为一个线程
3、而一个进程已启动就拥有一个默认线程，来执行进程默认要执行的任务，也就是执行main的线程

main方法里面的代码只能一行接一行的往下执行，如果要让两段代码同时执行，这样这两段代码要做的任务可以同时执行
，提高程序运行效率，怎么办？
1、一个线程执行一个任务
2、多个线程，同时执行多个任务，即多线程


Java与多线程
1、Java里每个应用程序一启动会自动启动一个默认线程来运行main方法里面的代码
2、在main方法里，可以让代码启动多个线程
3、Java启动多线程有两种方式：继承Thread类 、实现Runnable接口

进程的退出原则
一般情况下：
1、只有进程里的每一个线程都执行完毕之后，进程才会退出
2、而线程的run方法执行完毕之后，线程就执行完毕了

守护线程
1、前面说过“只有进程里的每一个线程都执行完毕之后，进程才会退出”
2、但是游戏时候，我们希望
- 对于某个线程来讲，如果其他线程都死了，那么进程不管这个是否还存在，都退出
- 这种线程成为“守护线程”

用途：
比如：某些用来对各个线程的内存进程管理的线程，如果其他线程都死了，那么这个线程就没有意义了，
所以，进程不应该考虑他的存在，直接退出


线程的数据共享
1、父子线程间的数据共享
2、兄弟线程间的数据共享
3、叔侄线程间的数据共享
4、不相干的线程间的数据共享


父子线程间的数据共享：
1、从父线程中把共享的数据传到子线程中
2、在子线程中使用父类成员变量来保存要共享的数据

兄弟线程间的数据共享:
1、本质与父子线程间数据共享相同
2、将要共享的数据申明到几兄弟的父亲那里，
然后父线程的数据共享方式将数据从父线程里传递给各个子线程

叔侄线程间的数据共享：
1、本质与父子线程间数据共享相同
2、找到他们共同的祖先线程，将要共享的数据申明到那里，
然后父子线程的数据共享方式将数据从父线程里传给各个线程

不相干的线程间的数据共享
1、使用静态变量作为全局变量进行数据共享

